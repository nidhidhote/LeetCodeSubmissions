/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(head==NULL)
            return 0;
        struct ListNode *slw=head,*fast=head;
        int f=0;
        while(slw&&fast&&fast->next)
        {
            slw=slw->next;
            fast=fast->next->next;
            if(slw==fast)
            { 
                f=1;
                break;
            }
        }
        if(f==0)
            return 0;
        else
        {
            struct ListNode *p1=slw,*p2=slw;
            int k=1,i;
            while(p1->next!=p2)
            {
                k++;
                p1=p1->next;
            }
            p1=head;
            p2=head;
            for(i=0;i<k;i++)
            {
                p2=p2->next;
            }
            while(p2!=p1)
            {
                p1=p1->next;
                p2=p2->next;
            }
            p2=p2->next;
            while(p2->next!=p1)
            {
                p2=p2->next;
            }
            p2=p2->next;
            return p2;
        }
        
    }
};