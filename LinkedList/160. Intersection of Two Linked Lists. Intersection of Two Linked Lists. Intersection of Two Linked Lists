/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA==NULL)
            return headA;
        if(headB==NULL)
            return headB;
        struct ListNode *h1,*h2,*ha,*hb,*preva,*prevb;
        h1=headA;
        h2=headB;
        ha=headA;
        hb=headB;
        int n1=0,n2=0;
        while(h1!=NULL)
        {
            n1++;
            h1=h1->next;
        }
         while(h2!=NULL)
        {
            n2++;
            h2=h2->next;
        }
       int  d=abs(n1-n2);
       if(n1>n2)
       {
           while(d--)
           {
               ha=ha->next;
           }
       }
        else
        {
            while(d--)
            {
                hb=hb->next;
            }
        }
        struct ListNode *t1,*t2;
        t1=ha;
        t2=hb;
        while(t1&&t2)
        {
            if(t1==t2)
                return t1;
            else
            {
                t1=t1->next;
                t2=t2->next;
            }
        }
        return 0;
    }
};